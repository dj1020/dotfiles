#!/usr/bin/env bash
# vim: ft=bash

set -x

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# Refresh
yabai -m signal --add event=display_removed action="launchctl kickstart -k \"gui/${UID}/homebrew.mxcl.yabai\""
yabai -m signal --add event=display_added   action="launchctl kickstart -k \"gui/${UID}/homebrew.mxcl.yabai\""

# apps to not manage (ignore)
manageOffApps="^(System Settings|Archive Utility|Wally|Alfred Preferences|Sublime Text|LINE|App Store|Preferences|Shottr|Karabiner|1Password|Ivanti|Finder|Stats|Raycast|Software Update|About This Mac|Dictionary|IINA|BetterTouchTool|Automator|TablePlus)"
yabai -m rule --add app="${manageOffApps}" manage=off
yabai -m rule --add app="cefBrowser" title="^Sign in" manage=off
yabai -m rule --add title="^Open" manage=off

# default app space
yabai -m rule --add app="Brave"      space=^1
yabai -m rule --add app="Slack"      space=^2
yabai -m rule --add app="^PhpStorm"  space=^3
yabai -m rule --add app="^Sublime"   space=^4
yabai -m rule --add app="Alacritty"  space=^5
yabai -m rule --add app="^ChatGPT"   space=^5


# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

# modify window shadows (default: on, options: on, off, float)
yabai -m config window_shadow                float

# window border (default: off)
yabai -m config window_border                on
yabai -m config window_border_width          3
yabai -m config active_window_border_color   0xff18ab1d
yabai -m config normal_window_border_color   0xff3b3b3b
yabai -m config insert_window_border_color   0xff8E83B8
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.9

# # mouse gesture
# yabai -m config mouse_modifier               fn
# yabai -m config mouse_action1                move
# yabai -m config mouse_action2                resize
# yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  12
yabai -m config bottom_padding               12
yabai -m config left_padding                 12
# NOTE: for OBS floating head
# yabai -m config left_padding                 450
yabai -m config right_padding                12
yabai -m config window_gap                   12


# Debuging:
#
# 修正如果用 raycast/alfred 切 app 時，無法取得 focus 的情況:

# focus window after active space changes
# yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id')"
# yabai -m signal --add event=space_changed action="yabai -m window --focus"
# yabai -m signal --add event=space_changed action="echo Space #: {YABAI_SPACE_ID}"

# focus window after active display changes
# yabai -m signal --add event=display_changed action="yabai -m window --focus"
# yabai -m signal --add event=display_changed action="echo Display Changed."

# yabai -m signal --add event=window_focused action='echo "Window Focused # {YABAI_WINDOW_ID}"'
# yabai -m signal --add event=window_title_changed action='echo "Window Title Changed # {YABAI_WINDOW_ID}"'

# 成功例子，輸出 display id:
# 看結果執行 tail -f /usr/local/var/log/yabai/yabai.out.log
# yabai -m signal --add event=display_changed action='echo "Display changed on display $YABAI_DISPLAY_ID"'


# yabai -m signal --add event=application_activated action='echo "Event: application_activated, Bundle ID: ${YABAI_PROCESS_ID}"'

# yabai -m signal --add event=application_activated action='yabai -m query --windows | jq "map(select(.pid == ${YABAI_PROCESS_ID}))"'

# 意外發現蠻有用的，可以查看 window/space 資訊:
# yabai -m signal --add event=application_launched action='
#    info=$(yabai -m query --windows | jq "map(select(.pid == ${YABAI_PROCESS_ID}))[0]") \
#    && echo ${info}\
#'

# yabai -m signal --add event=application_activated action='
#     info=$(yabai -m query --windows | jq "map(select(.pid == ${YABAI_PROCESS_ID}))[0]" | jq -c) \
#         && space=$(echo ${info} | jq ".space") \
#         && echo Space: ${space} \
#         && yabai -m space --focus ${space} \
# '

# yabai -m signal --add event=application_activated action='yabai -m window --focus'

# yabai -m query --windows | jq 'map(select(.pid == 60302))'

echo "yabai configuration loaded.."

